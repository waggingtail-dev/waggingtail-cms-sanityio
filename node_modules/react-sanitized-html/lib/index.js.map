{"version":3,"sources":["../src/index.js"],"names":["SUPPORTED_SANITIZER_OPTIONS","SanitizedHTML","sanitizerOptions","reduce","options","name","value","props","sanitizedHTML","html","className","__html","id","style","Component","defaultProps","propTypes","allowProtocolRelative","bool","allowedAttributes","objectOf","arrayOf","string","allowedClasses","allowedSchemes","allowedSchemesByTag","allowedTags","exclusiveFilter","func","isRequired","nonTextTags","parser","any","selfClosing","transformTags","oneOf"],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,8BAA8B,CAClC,uBADkC,EAElC,mBAFkC,EAGlC,gBAHkC,EAIlC,gBAJkC,EAKlC,qBALkC,EAMlC,aANkC,EAOlC,iBAPkC,EAQlC,aARkC,EASlC,QATkC,EAUlC,aAVkC,EAWlC,eAXkC,CAApC;;IAcqBC,a;;;;;;;;;;;6BACV;AAAA;;AACP,UAAMC,mBAAmBF,4BAA4BG,MAA5B,CAAmC,UAACC,OAAD,EAAUC,IAAV,EAAmB;AAC7E,YAAMC,QAAQ,OAAKC,KAAL,CAAWF,IAAX,CAAd;;AAEA,YAAI,OAAOC,KAAP,KAAiB,WAArB,EAAkC;AAChCF,kBAAQC,IAAR,IAAgBC,KAAhB;AACD;;AAED,eAAOF,OAAP;AACD,OARwB,EAQtB,EARsB,CAAzB;;AAUA,UAAMI,gBAAgB,4BACpB,KAAKD,KAAL,CAAWE,IADS,EAEpBP,gBAFoB,CAAtB;;AAKA,aACE;AACE,mBAAY,KAAKK,KAAL,CAAWG,SADzB;AAEE,iCAAyB,EAAEC,QAAQH,aAAV,EAF3B;AAGE,YAAK,KAAKD,KAAL,CAAWK,EAHlB;AAIE,eAAQ,KAAKL,KAAL,CAAWM;AAJrB,QADF;AAQD;;;;EAzBwC,gBAAMC,S;;kBAA5Bb,a;;;AA4BrBA,cAAcc,YAAd,GAA6B;AAC3BN,QAAM;AADqB,CAA7B;;AAIAR,cAAce,SAAd,GAA0B;AACxBC,yBAAuB,oBAAUC,IADT;AAExBC,qBAAuB,oBAAUC,QAAV,CAAmB,oBAAUC,OAAV,CAAkB,oBAAUC,MAA5B,CAAnB,CAFC;AAGxBC,kBAAuB,oBAAUH,QAAV,CAAmB,oBAAUC,OAAV,CAAkB,oBAAUC,MAA5B,CAAnB,CAHC;AAIxBE,kBAAuB,oBAAUH,OAAV,CAAkB,oBAAUC,MAA5B,CAJC;AAKxBG,uBAAuB,oBAAUL,QAAV,CAAmB,oBAAUC,OAAV,CAAkB,oBAAUC,MAA5B,CAAnB,CALC;AAMxBI,eAAuB,oBAAUL,OAAV,CAAkB,oBAAUC,MAA5B,CANC;AAOxBK,mBAAuB,oBAAUC,IAPT;AAQxBnB,QAAuB,oBAAUa,MAAV,CAAiBO,UARhB;AASxBC,eAAuB,oBAAUT,OAAV,CAAkB,oBAAUC,MAA5B,CATC;AAUxBS,UAAuB,oBAAUC,GAVT;AAWxBC,eAAuB,oBAAUZ,OAAV,CAAkB,oBAAUC,MAA5B,CAXC;AAYxBY,iBAAuB,oBAAUd,QAAV,CAAmB,oBAAUe,KAAV,CAAgB,CAAC,oBAAUP,IAAX,EAAiB,oBAAUN,MAA3B,CAAhB,CAAnB,CAZC;;AAcxBZ,aAAW,oBAAUY,MAdG;AAexBV,MAAW,oBAAUU,MAfG;AAgBxBT,SAAW,oBAAUmB;AAhBG,CAA1B","file":"index.js","sourcesContent":["'use strict';\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport sanitizeHTML from 'sanitize-html';\r\n\r\nconst SUPPORTED_SANITIZER_OPTIONS = [\r\n  'allowProtocolRelative',\r\n  'allowedAttributes',\r\n  'allowedClasses',\r\n  'allowedSchemes',\r\n  'allowedSchemesByTag',\r\n  'allowedTags',\r\n  'exclusiveFilter',\r\n  'nonTextTags',\r\n  'parser',\r\n  'selfClosing',\r\n  'transformTags'\r\n];\r\n\r\nexport default class SanitizedHTML extends React.Component {\r\n  render() {\r\n    const sanitizerOptions = SUPPORTED_SANITIZER_OPTIONS.reduce((options, name) => {\r\n      const value = this.props[name];\r\n\r\n      if (typeof value !== 'undefined') {\r\n        options[name] = value;\r\n      }\r\n\r\n      return options;\r\n    }, {});\r\n\r\n    const sanitizedHTML = sanitizeHTML(\r\n      this.props.html,\r\n      sanitizerOptions\r\n    );\r\n\r\n    return (\r\n      <div\r\n        className={ this.props.className }\r\n        dangerouslySetInnerHTML={{ __html: sanitizedHTML }}\r\n        id={ this.props.id }\r\n        style={ this.props.style }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSanitizedHTML.defaultProps = {\r\n  html: ''\r\n};\r\n\r\nSanitizedHTML.propTypes = {\r\n  allowProtocolRelative: PropTypes.bool,\r\n  allowedAttributes    : PropTypes.objectOf(PropTypes.arrayOf(PropTypes.string)),\r\n  allowedClasses       : PropTypes.objectOf(PropTypes.arrayOf(PropTypes.string)),\r\n  allowedSchemes       : PropTypes.arrayOf(PropTypes.string),\r\n  allowedSchemesByTag  : PropTypes.objectOf(PropTypes.arrayOf(PropTypes.string)),\r\n  allowedTags          : PropTypes.arrayOf(PropTypes.string),\r\n  exclusiveFilter      : PropTypes.func,\r\n  html                 : PropTypes.string.isRequired,\r\n  nonTextTags          : PropTypes.arrayOf(PropTypes.string),\r\n  parser               : PropTypes.any,\r\n  selfClosing          : PropTypes.arrayOf(PropTypes.string),\r\n  transformTags        : PropTypes.objectOf(PropTypes.oneOf([PropTypes.func, PropTypes.string])),\r\n\r\n  className: PropTypes.string,\r\n  id       : PropTypes.string,\r\n  style    : PropTypes.any\r\n};\r\n"]}